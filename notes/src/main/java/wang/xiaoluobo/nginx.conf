#user  nobody;
worker_processes  4;

error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        logs/nginx.pid;

events {
    worker_connections  40000;	# worker进程同时打开的最大连接数
#	worker_rlimit_nofile 100000;# 更改worker进程的最大打开文件数限制,比'ulimit -a'多。解决"too many open files"
	multi_accept on; 			# 当收到一个新连接通知后接受尽可能多的连接
	use epoll;	# 设置用于复用客户端线程的轮询方法,epoll需要linux2.6+
}


http {
	server_tokens off;  # 隐藏nginx版本号
	sendfile on; 		# sendfile()可以在磁盘和TCP socket之间互相拷贝数据(或任意两个文件描述符)。Pre-sendfile是传送数据之前在用户空间申请数据缓冲区。之后用read()将数据从文件拷贝到这个缓冲区，write()将缓冲区数据写入网络。sendfile()是立即将数据从磁盘读到OS缓存。因为这种拷贝是在内核完成的，sendfile()要比组合read()和write()以及打开关闭丢弃缓冲更加有效(更多有关于sendfile)
    tcp_nopush on; 		# 防止网络阻塞，在一个数据包里发送所有头文件，而不一个接一个的发送
    tcp_nodelay on; 	# 防止网络阻塞，nginx不要缓存数据，而是一段一段的发送--当需要及时发送数据时，就应该给应用设置这个属性，这样发送一小块数据信息时就不能立即得到返回值。


	keepalive_timeout 120; 						# 长连接超时时间(s)
    client_header_timeout 60; 					# 请求头超时时间
    client_body_timeout 60; 					# 请求体超时时间
    reset_timedout_connection on; 				# 关闭不响应的客户端连接。这将会释放那个客户端所占有的内存空间
    send_timeout 60; 							# 指定客户端的响应超时时间
	
	limit_conn_zone $binary_remote_addr zone=addr:5m; # 设置用于保存各种key(比如当前连接数)的共享内存的参数。5m就是5兆字节，这个值应该被设置的足够大以存储(32K*5)32byte状态或者(16K*5)64byte状态。
    limit_conn addr 100; 							  # 给定的key设置最大连接数。这里key是addr，我们设置的值是100，也就是说我们允许每一个IP地址最多同时打开有100个连接。
	
	include       mime.types;					# 只是一个在当前文件中包含另一个文件内容的指令。
    default_type  application/octet-stream;		# 设置文件默认MIME-type
	charset UTF-8; 								# 头默认的字符集
	
	
	gzip on; 									# 开启gzip压缩
    gzip_disable "msie6"; 						# 低版本兼容
    gzip_proxied any; 							# 允许或者禁止压缩基于请求和响应的响应流。any将会压缩所有的请求
    gzip_min_length 1k; 						# 允许压缩的最小页面字节数，从header头的Content-Length中获取，不管页面多大都进行压缩，建议设置成大于1K,如果小于1K可能会越压缩越大
	gzip_buffers 4 32k; 						# 压缩缓冲大小，允许申请4个单位为32K的内存作为流缓存
    gzip_comp_level 5; 							# 压缩级别,1-10越高越消耗CPU，但是压缩越好
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;	# 设置需要压缩的数据格式
    open_file_cache max=100000 inactive=20s; 	# 打开缓存的同时也指定了缓存最大数目，以及缓存的时间
	gzip_vary on; 								# vary header支持，让前端的缓存服务器继续缓存传输该压缩页面，而不提前解压
	gzip_http_version 1.1;						# 设置识别http协议的版本，默认为1.1
	
    open_file_cache_valid 30s; 					# 在open_file_cache中指定检测正确信息的间隔时间
    open_file_cache_min_uses 2; 				# 定义了open_file_cache中指令参数不活动时间期间里最小的文件数
    open_file_cache_errors on; 					# 指定了当搜索一个文件时是否缓存错误信息，也包括再次给配置中添加文件

	server_names_hash_bucket_size 128; 			# 服务器名字的hash表大小
	client_header_buffer_size 32k; 				# 客户端请求头部的缓冲区大小
	large_client_header_buffers 4 64k; 			# 设定请求缓存大小
	client_max_body_size 1024m; 				# 上传文件大小限制
	autoindex on; 								# 开启目录列表访问，合适下载服务器，默认关闭。
	

	# FastCGI能改善网站的性能：减少资源占用，提高访问速度
	fastcgi_connect_timeout 300;					# 指定链接到后端FastCGI的超时时间。
	fastcgi_send_timeout 300;						# 向FastCGI传送请求的超时时间，这个值是指已经完成两次握手后向FastCGI传送请求的超时时间。
    fastcgi_read_timeout 300; 						# 指定接收FastCGI应答的超时时间，这个值是指已经完成两次握手后接收FastCGI应答的超时时间。
    fastcgi_buffer_size 64k; 						# 指定读取FastCGI应答第一部分需要用多大的缓冲区，这个值表示将使用1个64KB的缓冲区读取应答的第一部分(应答头)，可以设置为gastcgi_buffers选项指定的缓冲区大小。
	fastcgi_buffers 4 64k;							# 指定本地需要用多少和多大的缓冲区来缓冲FastCGI的应答请求，如果一个php脚本所产生的页面大小为256KB，那么会分配4个64KB的缓冲区来缓存，如果页面大小大于256KB，那么大于256KB的部分会缓存到fastcgi_temp指定的路径中，但是这并不是好方法，因为内存中的数据处理速度要快于磁盘。一般这个值应该为站点中php脚本所产生的页面大小的中间值，如果站点大部分脚本所产生的页面大小为256KB，那么可以把这个值设置为“8 16K”、“4 64k”等。
    fastcgi_busy_buffers_size 128k; 				# 建议设置为fastcgi_buffer的两倍，繁忙时候的buffer
	fastcgi_temp_file_write_size 128k;				# 在写入fastcgi_temp_path时将用多大的数据库，默认值是fastcgi_buffers的两倍，设置上述数值设置小时若负载上来时可能报502 Bad Gateway
	fastcgi_cache_valid 200 302 1h;					# 用来指定应答代码的缓存时间，实例中的值表示将2000和302应答缓存一小时，要和fastcgi_cache配合使用
	fastcgi_cache_valid 301 1d;						# 将301应答缓存一天
	fastcgi_cache_valid any 1m;						# 将其他应答缓存为1分钟
	fastcgi_cache_min_uses 1;						# 请求的数量
	
    fastcgi_temp_path /data1/nginx/ngx_fcgi_tmp; 	# 在写入fastcgi_temp_path时将用多大的数据库，默认是fastcgi_buffer的两倍，如果太小，可能会报502 Bad GateWay
    fastcgi_cache_path /data1/nginx/ngx_fcgi_cache levels=2:2 keys_zone=ngx_fcgi_cache:512m inactive=1d max_size=40g; # fastcgi缓存
	
	proxy_cache_path /data1/nginx/cache levels=1:2 keys_zone=one:10m;	# nginx反向代理缓存

	
	# 反向代理
	proxy_connect_timeout 300;
	proxy_read_timeout 300;
	proxy_send_timeout 300;
	proxy_buffer_size 64k;
	proxy_buffers   4 32k;
	proxy_busy_buffers_size 64k;
	proxy_temp_file_write_size 64k;
	
#	if ($request_method !~ ^(GET|HEAD|POST)$ ) {
#		return 501;
#	}
	
	server {
		listen 80 default_server;
		server_name _;
		return 501;
	}
	
	
	server {
        server_name app.bz-e.com;
        listen               80;
        location / {
    		proxy_set_header Host $host;
    		proxy_set_header X-Real-IP $remote_addr;
    		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    		proxy_pass http://127.0.0.1:8888/sy_pcapp/;
			proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
			proxy_cache_valid 200 302 10m;
			proxy_cache_valid 301 1h;
			proxy_cache_valid any 1m;
        }

	    location /sy_pcapp {
    		proxy_set_header Host $host;
    		proxy_set_header X-Real-IP $remote_addr;
    		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    		proxy_pass http://127.0.0.1:8888;
			proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
			proxy_cache_valid 200 302 10m;
			proxy_cache_valid 301 1h;
			proxy_cache_valid any 1m;
        }

#		location ~ ^/(images|javascript|js|css|flash|media|static)/{
#			root /data1/tomcat8888/webapps/sy_pcapp;
#			expires 1d;
#			access_log off;
#			log_not_found off;
#		}
		 
#		location ~ .*.(htm|html|gif|jpg|jpeg|png|bmp|swf|ioc|rar|zip|txt|flv|mid|doc|ppt|pdf|xls|mp3|wma)$ {
#			expires 3d;
#		}
    }
	

    server {
        server_name erp.bz-e.com;
        listen               80;
        location / {
    		proxy_set_header Host $host;
    		proxy_set_header X-Real-IP $remote_addr;
    		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    		proxy_pass http://127.0.0.1:8888/sy_erp/;
			proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
			proxy_cache_valid 200 302 10m;
			proxy_cache_valid 301 1h;
			proxy_cache_valid any 1m;
        }

	    location /sy_erp {
    		proxy_set_header Host $host;
    		proxy_set_header X-Real-IP $remote_addr;
    		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    		proxy_pass http://127.0.0.1:8888;
			proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
			proxy_cache_valid 200 302 10m;
			proxy_cache_valid 301 1h;
			proxy_cache_valid any 1m;
        }
		 
#		location ~ ^/(images|javascript|js|css|flash|media|static)/{
#			root /data1/tomcat8888/webapps/sy_erp;
#			expires 1d;
#			access_log off;
#			log_not_found off;
#		}
		 
#		location ~ .*.(htm|html|gif|jpg|jpeg|png|bmp|swf|ioc|rar|zip|txt|flv|mid|doc|ppt|pdf|xls|mp3|wma)$ {
#			expires 3d;
#		}
    }

    
    server {
        server_name wx.bz-e.com;
        listen 80;
        location / {
    		proxy_set_header Host $host;
    		proxy_set_header X-Real-IP $remote_addr;
    		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    		proxy_pass http://127.0.0.1:8888/wechat/;
			proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
			proxy_cache_valid 200 302 10m;
			proxy_cache_valid 301 1h;
			proxy_cache_valid any 1m;
        }

	    location /wechat {
    		proxy_set_header Host $host;
    		proxy_set_header X-Real-IP $remote_addr;
    		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    		proxy_pass http://127.0.0.1:8888;
			proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
			proxy_cache_valid 200 302 10m;
			proxy_cache_valid 301 1h;
			proxy_cache_valid any 1m;
        }
		
#		location ~ ^/(images|javascript|js|css|flash|media|static)/{
#			root /data1/tomcat8888/webapps/wechat;
#			expires 1d;
#			access_log off;
#			log_not_found off;
#		}
		 
#		location ~ .*.(htm|html|gif|jpg|jpeg|png|bmp|swf|ioc|rar|zip|txt|flv|mid|doc|ppt|pdf|xls|mp3|wma)$ {
#			expires 3d;
#		}
#   }


	server {
		server_name wechat.bz-e.com;
		listen 80;
		location / {
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_pass http://127.0.0.1:9999/ess_wechat/;
			proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
			proxy_cache_valid 200 302 10m;
			proxy_cache_valid 301 1h;
			proxy_cache_valid any 1m;
		}

		location /ess_wechat {
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_pass http://127.0.0.1:9999;
			proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
			proxy_cache_valid 200 302 10m;
			proxy_cache_valid 301 1h;
			proxy_cache_valid any 1m;
		}
		
#		location ~* \.(images|javascript|js|css|flash|media|static)${
#			root /data1/tomcat8888/webapps/ess_wechat;
#			expires 1d;
#			access_log off;
#			log_not_found off;
#		}
		 
#		location ~ .*.(htm|html|gif|jpg|jpeg|png|bmp|swf|ioc|rar|zip|txt|flv|mid|doc|ppt|pdf|xls|mp3|wma)$ {
#			expires 3d;
#		}
	}


    server {
        listen       8999;
        location / {
            root   /data/images/;
        }
    }
	
}
